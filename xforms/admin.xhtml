<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2015 Ethan Gruber
    etdpub: https://github.com/ewg118/etdpub
    Apache License 2.0
-->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:fr="http://orbeon.org/oxf/xml/form-runner" xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:exist="http://exist.sourceforge.net/NS/exist" xmlns:mods="http://www.loc.gov/mods/v3" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
	<head>
		<title>etdpub Administration</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css" />
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css" />

		<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css" />
		<script type="text/javascript" src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico" />
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png" />
		<link rel="stylesheet" href="/apps/etdpub/xforms/css/style.css" />

		<xforms:model>
			<xforms:instance id="control-instance" xxforms:exclude-result-prefixes="#all">
				<controls xmlns="">
					<id></id>
					<media_url></media_url>
					<stream_url></stream_url>
					<type></type>
					<template></template>
					<action></action>
					<working>false</working>
					<internetMediaType></internetMediaType>
					<interface></interface>
					<status></status>
				</controls>
			</xforms:instance>

			<!-- exist URL is stored in an XML file -->
			<xforms:instance id="exist-config" xxforms:exclude-result-prefixes="#all">
				<xi:include href="../exist-config.xml"></xi:include>
			</xforms:instance>

			<xforms:instance id="config" xxforms:exclude-result-prefixes="#all">
				<config></config>
			</xforms:instance>

			<xforms:instance id="config-template" xxforms:exclude-result-prefixes="#all">
				<config>
					<title>etdpub</title>
					<url>http://localhost:8080/orbeon/etdpub/</url>
					<xeac></xeac>
					<solr>
						<url>http://localhost:8080/solr/etdpub/</url>
						<rows>20</rows>
					</solr>
					<sparql>
						<update></update>
						<query></query>
						<store></store>
					</sparql>
					<logo></logo>
					<style>default</style>
					<geonames_api_key></geonames_api_key>
					<google_analytics></google_analytics>
					<absolute_path>/usr/local/projects/etdpub/</absolute_path>
				</config>
			</xforms:instance>

			<xforms:instance id="doc" xxforms:exclude-result-prefixes="#all">
				<eac-cpf xmlns=""></eac-cpf>
			</xforms:instance>

			<!-- instance templates -->
			<xforms:instance id="templates">
				<xi:include href="instances/templates.xml"></xi:include>
			</xforms:instance>

			<!-- xquery -->
			<xforms:instance id="eXist-xquery">
				<exist:query xmlns="">
					<exist:text></exist:text>
				</exist:query>
			</xforms:instance>

			<xforms:instance id="xqueries">
				<queries xmlns="">
					<query id="collection-count">&lt;report&gt;{count(collection())}&lt;/report&gt;</query>
					<query id="get-objects">
						<![CDATA[declare namespace mods="http://www.loc.gov/mods/v3";
						declare namespace tei="http://www.tei-c.org/ns/1.0";
						
						 <report> { for $record in collection() let
						 	$type := $record/*/local-name() return
						 	if ($type='modsCollection') then 
						 		<record>
							 		<id>{ data($record//mods:recordIdentifier) }</id>
							 		<title>{data($record//mods:mods/mods:titleInfo/mods:title) }</title>
							 		<author>{ string-join($record//mods:mods/mods:name/mods:namePart, ',') }</author>
							 		<date>{ if ($record//mods:dateIssued) then string-join($record//mods:dateIssued, '-') else data($record//descendant::mods:part/mods:date) }</date>
							 		<media_url>{ data($record//mods:location/mods:url) }</media_url>
							 		<internetMediaType>{data($record//mods:physicalDescription/mods:internetMediaType)}</internetMediaType>
							 		<type>MODS</type>
							 		<genre>{data($record//mods:mods/mods:genre)}</genre>
						 		</record>
						 	else if ($type='TEI') then
							 	<record>
							 		<id>{ data($record/*[local-name()='TEI']/@xml:id) }</id>
							 		<title>{ data($record//tei:titleStmt/tei:title)}</title>
							 		<type>TEI</type>
							 	</record>
							 else '' } 
						 </report>]]></query>
					<!--<query id="get-objects"> declare namespace mods="http://www.loc.gov/mods/v3"; declare namespace tei="http://www.tei-c.org/ns/1.0"; &lt;report> { for $record in collection() return &lt;record> &lt;title&gt;
						{data($record//mods:title)}&lt;/title&gt; &lt;id>{data($record//mods:recordIdentifier) }&lt;/id> &lt;author>{ data($record//mods:namePart) }&lt;/author> &lt;date>{
						data($record//mods:dateIssued) }&lt;/date> &lt;media_url&gt;{ data($record//mods:location/mods:url) }&lt;/media_url&gt; &lt;/record> } &lt;/report> </query>-->
				</queries>
			</xforms:instance>

			<xforms:instance id="pagination-result">
				<exist:result></exist:result>
			</xforms:instance>

			<xforms:instance id="xquery-result">
				<exist:result></exist:result>
			</xforms:instance>

			<!-- file operations (for deleting the document from the filesystem -->
			<xforms:instance id="delete-config">
				<config xmlns="">
					<delete>
						<url></url>
					</delete>
				</config>
			</xforms:instance>

			<xforms:instance id="dump">
				<dump xmlns=""></dump>
			</xforms:instance>

			<!-- send to Solr -->
			<xforms:instance id="addIndex" xxforms:exclude-result-prefixes="#all">
				<add xmlns=""></add>
			</xforms:instance>

			<!-- Instance for Solr commit-->
			<xforms:instance id="sendCommit" xxforms:exclude-result-prefixes="#all">
				<commit></commit>
			</xforms:instance>
			<!-- delete from Solr -->
			<xforms:instance id="deleteId" xxforms:exclude-result-prefixes="#all">
				<delete xmlns="">
					<query></query>
				</delete>
			</xforms:instance>

			<!-- LOD CRUD instances -->
			<xforms:instance id="rdf" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"></rdf:RDF>
			</xforms:instance>

			<xforms:instance id="sparqlUpdate-template">
				<query><![CDATA[PREFIX rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX dcterms:	<http://purl.org/dc/terms/>
PREFIX dcmitype:	<http://purl.org/dc/dcmitype/>
PREFIX oa:	<http://www.w3.org/ns/oa#>
DELETE {?s ?p ?o} WHERE { 
{<URI> dcterms:temporal ?s . ?s ?p ?o }
UNION { ?parts dcterms:source <URI> ; rdf:type dcmitype:Text . ?s oa:hasTarget ?parts . ?s ?p ?o }
UNION { ?s dcterms:source <URI> ; rdf:type dcmitype:Text . ?s ?p ?o }
UNION {<URI> ?p ?o . ?s ?p ?o . FILTER (?s = <URI>) }
}]]>
				</query>
			</xforms:instance>

			<xforms:instance id="sparqlUpdate">
				<query></query>
			</xforms:instance>

			<!-- ************* BINDINGS **************** -->
			<xforms:bind nodeset="instance('control-instance')">
				<xforms:bind nodeset="working" type="xs:boolean"></xforms:bind>
			</xforms:bind>

			<!-- ************* SUBMISSIONS **************** -->
			<xforms:submission id="load-config" serialization="none" method="get" action="{instance('exist-config')/url}etdpub/config.xml" replace="instance" instance="config"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='get-objects']"></xforms:setvalue>
					<xforms:send submission="xquery-pagination"></xforms:send>
				</xforms:action>
				<xforms:message ev:event="xforms-submit-error" level="modal">Error loading config from eXist database.</xforms:message>
			</xforms:submission>

			<!--***************** XQUERY ******************-->
			<!-- xquery for getting and processing query results into pages of items -->
			<xforms:submission id="xquery-pagination" ref="instance('eXist-xquery')" action="{instance('exist-config')/url}etdpub/records" method="post" replace="instance" instance="pagination-result"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error querying eXist database.</xforms:message>
			</xforms:submission>

			<xforms:submission id="xquery-collection" ref="instance('eXist-xquery')" action="{instance('exist-config')/url}etdpub/records" method="post" replace="instance" instance="xquery-result"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error querying eXist database.</xforms:message>
			</xforms:submission>

			<!--***************** EXIST-DB ******************-->
			<!-- delete finding aid -->
			<xforms:submission id="delete-doc" action="{instance('exist-config')/url}etdpub/records/{instance('control-instance')/id}.xml" method="delete" replace="none"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">MODS/TEI document successfully deleted.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Error deleting document from eXist database.</xforms:message>
			</xforms:submission>

			<!-- ************************* SOLR ************************** -->
			<xforms:submission id="to-solr" method="get" replace="instance" instance="addIndex" serialization="none" resource="/etdpub/id/{instance('control-instance')/id}.solr">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error transforming record to Solr document.</xforms:message>
				<xforms:send ev:event="xforms-submit-done" submission="post-solr-doc"></xforms:send>
			</xforms:submission>

			<xforms:submission id="post-solr-doc" action="{instance('config')/solr/url}update" ref="instance('addIndex')" instance="addIndex" replace="instance" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is incorrect.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:send submission="submit-commit"></xforms:send>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="put-document" ref="instance('dump')" method="post" replace="none"
				resource="{instance('config')/solr/url}update/extract?literal.id={instance('control-instance')/id}&amp;stream.url={instance('control-instance')/stream_url}&amp;fmap.content=text&amp;fmap.date=timestamp&amp;commit=true">
				<xforms:header>
					<xforms:name>Content-type</xforms:name>
					<xforms:value ref="instance('control-instance')/internetMediaType"></xforms:value>
				</xforms:header>
				<xforms:setvalue ev:event="xforms-submit" ref="instance('control-instance')/working" value="true()"></xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to index the document file.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('control-instance')/status">Document successfully saved to Solr.</xforms:setvalue>
					<xforms:setvalue ref="instance('control-instance')/working" value="false()"></xforms:setvalue>
					<xforms:send submission="to-solr"></xforms:send>
				</xforms:action>
			</xforms:submission>

			<!-- delete from Solr -->
			<xforms:submission id="delete-solr-doc" action="{instance('config')/solr/url}update" ref="instance('deleteId')" instance="deleteId" replace="none" method="post">
				<xforms:send ev:event="xforms-submit-done" submission="submit-commit"></xforms:send>
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr.</xforms:message>
			</xforms:submission>

			<!-- send commit -->
			<xforms:submission id="submit-commit" action="{instance('config')/solr/url}update" ref="instance('sendCommit')" instance="sendCommit" replace="none" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Solr commit failed.</xforms:message>
			</xforms:submission>

			<!--********************** SPARQL SUBMISSIONS **********************-->
			<xforms:submission id="get-rdf" serialization="none" method="get" action="/etdpub/id/{instance('control-instance')/id}.rdf" replace="instance" instance="rdf">
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to get RDF/XML serialization.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('sparqlUpdate')" value="replace(instance('sparqlUpdate-template'), 'URI', instance('rdf')/*[1]/@rdf:about)"></xforms:setvalue>
					<xforms:send submission="delete-graph"></xforms:send>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="delete-graph" action="{instance('config')/sparql/update}" ref="instance('sparqlUpdate')" serialization="text/plain" replace="none" method="post"
				mediatype="application/sparql-update">
				<xforms:message level="modal" ev:event="xforms-submit-error">SPARQL update failed.</xforms:message>
				<!-- only post new RDF if we are refreshing the document in the triplestore -->
				<xforms:send submission="post-rdf" ev:event="xforms-submit-done" if="instance('control-instance')/action = 'update'"></xforms:send>
			</xforms:submission>

			<xforms:submission id="post-rdf" action="{instance('config')/sparql/store}?default" ref="instance('rdf')" replace="none" method="post" mediatype="application/rdf+xml">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Successfully posted to endpoint.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Post to endpoint failed.</xforms:message>
			</xforms:submission>

			<!-- ******************* XFORMS-MODEL-CONSTRUCT-DONE **********************-->
			<xforms:action ev:event="xforms-model-construct-done">
				<xforms:send submission="load-config"></xforms:send>
			</xforms:action>
		</xforms:model>
	</head>

	<body>
		<xforms:var name="display_path"></xforms:var>
		<div class="container-fluid">
			<div class="row">
				<div class="col-md-12">
					<div id="form">
						<!-- progress/status boxes -->
						<xforms:group ref=".[instance('control-instance')/working=true()]">
							<div class="bg-info alert-box">
								<span class="glyphicon glyphicon-info-sign"></span>
								<strong>Working:</strong> Indexing document...</div>
						</xforms:group>
						<xforms:group ref=".[string-length(instance('control-instance')/status) &gt; 0]">
							<div class="bg-info alert-box">
								<span class="glyphicon glyphicon-info-sign"></span>
								<strong>Status:</strong>
								<xforms:output ref="instance('control-instance')/status"></xforms:output>
							</div>
						</xforms:group>
						<h1>etdpub Administration</h1>
						<p><a href="{instance('config')/url}" target="_blank">View Pubic Interface <span class="glyphicon glyphicon-new-window"></span></a><br /><a href="{$display_path}logout"><span
									class="glyphicon glyphicon-log-out"></span> Logout</a></p>
						<h3>Create New Documents</h3>
						<ul>
							<xforms:repeat nodeset="xxforms:sort(instance('templates')/template, @label, 'text', 'ascending')">
								<li><a href="edit/?template={@id}"><span class="glyphicon glyphicon-file"></span><xforms:output ref="@label"></xforms:output></a></li>
							</xforms:repeat>
						</ul>
						<xforms:group ref=".[count(instance('pagination-result')//record) &gt; 0]">
							<div>
								<h3>List of Records</h3>
								<!-- pagination variables -->
								<xforms:var name="numFound" select="number(instance('control-instance')/numFound)"></xforms:var>
								<table class="table">
									<thead>
										<tr>
											<th>Type</th>
											<th>Title</th>
											<th style="width:10%">View</th>
											<th style="width:10%">Delete</th>
										</tr>
									</thead>
									<tbody>
										<xforms:repeat nodeset="instance('pagination-result')//record">
											<xforms:var name="id" select="id"></xforms:var>
											<xforms:var name="media_url" select="media_url"></xforms:var>
											<xforms:var name="genre" select="genre"></xforms:var>
											<xforms:var name="type" select="type"></xforms:var>
											<xforms:var name="internetMediaType" select="internetMediaType"></xforms:var>

											<tr>
												<td><xforms:output value="$type"></xforms:output>
												</td>
												<td>
													<h4>
														<xforms:group ref=".[type='MODS']">
															<a href="edit/?id={$id}">
																<xforms:output ref="title"></xforms:output>
															</a>
														</xforms:group>
														<xforms:group ref=".[type='TEI']">
															<xforms:output ref="title"></xforms:output>
														</xforms:group>
													</h4>
													<div>
														<xforms:output ref="author">
															<xforms:label>Author</xforms:label>
														</xforms:output>
													</div>
													<div>
														<xforms:output ref="date">
															<xforms:label>Date</xforms:label>
														</xforms:output>
													</div>
													<xforms:group ref="genre">
														<xforms:output ref=".">
															<xforms:label>Genre</xforms:label>
														</xforms:output>
													</xforms:group>
												</td>
												<td class="text-center">
													<a href="{instance('config')/url}id/{$id}.xml" target="_blank">xml</a> | <a href="{instance('config')/url}id/{$id}" target="_blank">html</a>
												</td>
												<td class="text-center">
													<xforms:trigger appearance="minimal">
														<xforms:label><span class="glyphicon glyphicon-refresh"></span></xforms:label>
														<xforms:hint>Reindex Document</xforms:hint>
														<xforms:action ev:event="DOMActivate">
															<xforms:setvalue ref="instance('control-instance')/id" value="$id"></xforms:setvalue>
															<!-- set the document URL and other variables -->
															<xforms:setvalue ref="instance('control-instance')/stream_url"
																value="if (matches($media_url, '^https?://')) then $media_url else concat(instance('config')/url, $media_url)"></xforms:setvalue>
															<xforms:setvalue ref="instance('control-instance')/template" value="instance('templates')/template[. = $genre]/@id"></xforms:setvalue>
															<xforms:setvalue ref="instance('control-instance')/type" value="$type"></xforms:setvalue>
															<xforms:setvalue ref="instance('control-instance')/internetMediaType" value="$internetMediaType"></xforms:setvalue> <xforms:dispatch
																target="reindex" name="fr-show"></xforms:dispatch>
														</xforms:action>
													</xforms:trigger>
													<xforms:trigger appearance="minimal">
														<xforms:label><span class="glyphicon glyphicon-remove"></span></xforms:label>
														<xforms:hint>Delete Document</xforms:hint>
														<xforms:action ev:event="DOMActivate">
															<xforms:setvalue ref="instance('control-instance')/id" value="$id"></xforms:setvalue>
															<xforms:setvalue ref="instance('control-instance')/media_url" value="$media_url"></xforms:setvalue>
															<xforms:dispatch target="delete" name="fr-show"></xforms:dispatch>
														</xforms:action>
													</xforms:trigger>
												</td>
											</tr>
										</xforms:repeat>
									</tbody>
								</table>
							</div>
						</xforms:group>
						<xforms:group ref=".[count(instance('pagination-result')//record)=0]">
							<h1>No records in collection.</h1>
						</xforms:group>
					</div>
					<!-- dialogs -->
					<fr:alert-dialog id="delete">
						<fr:label>Delete</fr:label>
						<fr:message>Are you sure you want to delete this object?</fr:message>
						<fr:negative-choice></fr:negative-choice>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<!-- set action -->
								<xforms:setvalue ref="instance('control-instance')/action">delete</xforms:setvalue>
								<!-- first delete the uploaded media -->
								<xforms:setvalue ref="instance('delete-config')/delete/url" value="concat('oxf:/apps/etdpub/', instance('control-instance')/media_url)"></xforms:setvalue>
								<xforms:insert nodeset="instance('dump')"
									origin="xxforms:call-xpl('oxf:/apps/etdpub/xpl/xforms/delete-document.xpl', 'configuration', instance('delete-config'), 'data')"></xforms:insert>
								<!-- delete the doc from eXist and Solr -->
								<xforms:send submission="delete-doc"></xforms:send>
								<xforms:setvalue ref="instance('deleteId')/query" value="concat('id:&#x022;', instance('control-instance')/id, '&#x022;')"></xforms:setvalue>
								<xforms:send submission="delete-solr-doc"></xforms:send>
								<!-- delete triples from triplestore, if applicable -->
								<xforms:action if="string(instance('config')/sparql/update) and string(instance('config')/sparql/store)">
									<xforms:setvalue ref="instance('sparqlUpdate')"
										value="replace(instance('sparqlUpdate-template'), 'URI', concat(instance('config')/url, 'id/', instance('control-instance')/id))"></xforms:setvalue>
									<xforms:send submission="delete-graph"></xforms:send>
								</xforms:action>
								<!-- reload table -->
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='get-objects']"></xforms:setvalue>
								<xforms:send submission="xquery-pagination"></xforms:send>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="reindex">
						<fr:label>Reindex</fr:label>
						<fr:message>Do you want to reindex the document into Solr and (optionally) the SPARQL endpoint?</fr:message>
						<fr:negative-choice></fr:negative-choice>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<!-- set action -->
								<xforms:setvalue ref="instance('control-instance')/action">update</xforms:setvalue>
								<!-- only index the Document file for a MODS file that is not of the journal template -->
								<xforms:action if="instance('control-instance')/type='MODS'">
									<xforms:send submission="put-document" if="not(instance('control-instance')/template = 'journal')"></xforms:send>
								</xforms:action>
								<!-- otherwise, get the TEI-to-Solr document directly -->
								<xforms:action if="instance('control-instance')/type = 'TEI'">
									<xforms:send submission="to-solr"></xforms:send>
								</xforms:action>
								<!-- delete triples from triplestore, if applicable. Then re-post RDF document -->
								<xforms:action if="string(instance('config')/sparql/update) and string(instance('config')/sparql/store)">
									<xforms:send submission="get-rdf"></xforms:send>
								</xforms:action>
								<!-- reload table -->
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='get-objects']"></xforms:setvalue>
								<xforms:send submission="xquery-pagination"></xforms:send>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<!--<fr:xforms-inspector id="orbeon-xforms-inspector"></fr:xforms-inspector>-->
				</div>
			</div>
		</div>
	</body>
</html>
